Best Bootstrap Bubbles
Bayan Berri
Naotake Kinoshita
Brian Leung
Khyber Sen
pd 7
---------------------


/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wow we so BOSS bc...

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
blah blah pesky bug...
maybe some of these will move into the Obs.Ovrcm section...


COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wow! oo!...

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tales of wisdom gained...


||||||||||||||||||||||||||||||||||||||||||

 ______   ______   __   __   __       ______   _______
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/
==============================================================

bayanB -- 2017-11-17 08:13:47
Login welcome and register

khyberS -- 2017-11-17 09:10:26
Added util files from last project.

naotakaK -- 2017-11-17 13:09:59
added functions for musixmatch

bayanB -- 2017-11-17 19:13:05
customize template done

bayanB -- 2017-11-18 10:34:39
fixed design doc

khyberS -- 2017-11-18 11:37:53
Added ListenUpDatabase class as a DB wrapper that exposes all the necessary APIs/methods
    needed in the app (i.e. the flask part).
ListenUpDatabase uses the classes User, Question, and Song that hold all the data
    that is stored in the corresponding DB tables.
There a few exceptions for User:
    The password isn't stored in the User so that it's secure.
    User also stores info specific to a single game/session the user plays,
        which changes every time and is not persisted in the DB.
Question and Song have a mutable audio_path:
    They need to download the audio from the Watson Text-to-Speech API.
    This isn't done immediately by the other APIs that retrieve the text,
    but instead, Question and Song have a download_audio() method
    that downloads the audio and adds the path to the object.
The Python hooks for the web APIs used, the music, text-to-speech, and trivia questions,
    are exposed in the modules in api/: music.py, text_to_speech.py, and trivia.py.
    We still need to implement these; I finished the text_to_speech one.
Question, Song, and ListenUpDatabase use these APIs to maintain the application state.
All the API keys, etc. are stored in secrets.py right now and are imported into the api modules.
    I didn't add secrets.py to the repo, but I can send it privately.
    We can always easily change the format of the secrets, too.
The real app.py is in core/.
    It has all the routes and stuff, but the app.py we run is still in the main directory.
    It just calls the other app.py's run() function.
app.py is filled with some of the same routes from the last project that deal with accounts.
app.py also has a bunch of unimplemented routes
    that do some of the other stuff our website is supposed to do.
I'm not exactly sure how the templates already created are meant to interact with Flask,
    so I tried to coordinate them where I could, but for some of the stuff I'm not sure.

khyberS -- 2017-11-19 10:43:15
Fixed bugs in ListenUpDatabase, incl. forgetting to commit the DB.

naotakaK -- 2017-11-19 18:32:44
get_song returns artist, title and song id

brianL -- 2017-11-21 01:37:34
I made the get trivia questions function. It's somewhat customizable

brianL -- 2017-11-21 13:18:52
changed trivia.py to use requests instead of urllib2

khyberS -- 2017-11-21 15:35:38
Changed answer_questions() route to render_template() won.jinja2 if the user has won,
    instead of just passing a boolean to questions.jinja2, the normal template.
Also realized that ListenUpDatabase.add_questions() need to check for duplicated questions
    returned by the API, so that the database questions remain unique.
    I didn't fix this yet, but I will.

bayanB -- 2017-11-21 20:44:15
Created a questions.html and congrats.html. Congrats just prints congrats {{user}} and links to customize and logout. and questions will print the question and answer choices
naotakaK -- 2017-11-22 11:33:22
Updated music.py to allow for bleeping of bad words. random_song doesn't return anything yet, but has all the appropriate values (artist, lyrics, title, track_id)

naotakaK -- 2017-11-22 12:49:35
Removed API key from file and made get_song return a particular song instead of random

